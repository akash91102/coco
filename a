createNewMasterAgreement = () => {
    const data = this.props.data || this.props.profileData || {};
    let newEntry = null;
    const prop = 'compositeProfile.legalAgreement.attributes.masterAgreements';

    selectedRowIdx = null;

    this.toggleModal({
        state: true,
        header: { title: 'Add New Master Agreement' },
        formdata: newFormBind({ formdata: this.state.config.create?.newMasterAgreement }),
        onUpdate: (newdata) => {
            newEntry = tableEntryUpdate({ newdata, markSource: true });
        },
        onSave: () => {
            let exists = false;
            let formData = cloneObject(data);
            
            if (!formData.compositeProfile?.legalAgreement?.attributes?.masterAgreements) {
                this.initializeProfileData(formData);
            }

            // Check for duplicate Agreement IDs
            formData.compositeProfile.legalAgreement.attributes.masterAgreements.forEach(item => {
                if (item.agreementId === newEntry.agreementId?.value) {
                    exists = true;
                    MessageBox.error('Validation Error', 'Agreement ID already exists. Please enter a unique Agreement ID.', 500);
                }
            });

            if (!exists) {
                // Transform the form data into the expected table format
                const newAgreement = {
                    lineOfBusiness: newEntry.lineOfBusiness?.value || '',
                    agreementId: newEntry.agreementId?.value || '', 
                    agreementType: newEntry.agreementType?.value || '',
                    legalEntityId: newEntry.legalEntityId?.value || '',
                    legalEntity: newEntry.legalEntity?.value || ''
                };

                formData.compositeProfile.legalAgreement.attributes.masterAgreements.push(newAgreement);
                this.toggleModal({ state: false });
                
                if (this.props.onCustFormUpdate) {
                    this.props.onCustFormUpdate(formData);
                }
                
                // Refresh the grid
                if (this.state.gridApi["masterAgreements"]) {
                    this.state.gridApi["masterAgreements"].setRowData(
                        formData.compositeProfile.legalAgreement.attributes.masterAgreements
                    );
                    this.gridBindEvents(this.state.gridApi["masterAgreements"]);
                }
            }
        }
    });
};
